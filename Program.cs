using System.Diagnostics.Metrics;

namespace ConsoleApp18
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] numbernew = { 0x54, 104, 114, 0x6F, 117, 103, 104, 32, 97, 32, 112, 114, 111, 99, 101, (0b11110 + 0b1111 + 0b1000110), 115, 32, (0b100001 * 3), 97, 108, 108, 101, 100, (0b10000 * 2), 100, 101, 108, 105, 113, 117, 101, 115, 99, 101, 110, 99, 101, 44, 32, 116, 104, 101, 32, 99, 97, 112, 32, 97, 110, 100, 32, 103, 105, 108, (0b11011 * 4), 115, 0x20, 0x6F, 102, 32, 97, 110, (0b1000 * 4), (0b1100100 + 0b1011), 108, (0b100001 + 0b100001 + 0b100010), 101, 114, 32, 105, 0x6E, 107, 32, 0x63, 97, 112, 32, 109, 117, 115, 104, 114, (0b1001110 + 0b100001), 111, 109, 32, 100, 105, 115, 115, 111, 108, 0x76, 101, 32, 105, 110, 116, 111, 32, 97, 32, 98, 108, 0x61, 99, 107, 32, 108, 105, 113, 0x75, 105, 100, (0b10111 * 2) };
            //sentntance1 = sentntance1.Replace('[',' ');
            //sentntance1 = sentntance1.Replace(']', ' ');
            //sentntance1 = sentntance1.Replace("   ", " ");
            //sentntance1 = sentntance1.Replace("  ", " ");
            //sentntance1 = sentntance1.Trim();
            string sentance1 = "0x54,104,114,0x6F,117,103,104,32,97,32,112,114,111,99,101,(11110+1111+1000110),115,32,(100001*3),97,108,108,101,100,(10000*2),100,101,108,105,113,117,101,115,99,101,110,99,101,44,32,116,104,101,32,99,97,112,32,97,110,100,32,103,105,108,(11011*4),115,0x20,0x6F,102,32,97,110,(1000*4),(1100100+1011),108,(100001+100001+100010),101,114,32,105,0x6E,107,32,0x63,97,112,32,109,117,115,104,114, (1001110+100001),111,109,32,100,105,115,115,111,108,0x76,101,32,105,110,116,111,32,97,32,98,108,0x61,99,107,32,108,105,113,0x75,105,100,(10111*2)";
            sentance1 = sentance1.Replace(",", "\" , \"");
            Console.WriteLine(sentance1);
            //Console.WriteLine(sentntance1);
            //string[] words = sentntance1.Split(',');
            //Console.WriteLine(words.Length);
            string[] solver = {"0x54" , "104" , "114" , "0x6F" , "117" , "103" , "104" , "32" , "97" , "32" , "112" , "114" , "111" , "99" , "101" , "(11110+1111+1000110)" , "115" , "32" , "(100001*3)" , "97" , "108" , "108" , "101" , "100" , "(10000*2)" , "100" , "101" , "108" , "105" , "113" , "117" , "101" , "115" , "99" , "101" , "110" , "99" , "101" , "44" , "32" , "116" , "104" , "101" , "32" , "99" , "97" , "112" , "32" , "97" , "110" , "100" , "32" , "103" , "105" , "108" , "(11011*4)" , "115" , "0x20" , "0x6F" , "102" , "32" , "97" , "110" , "(1000*4)" , "(1100100+1011)" , "108" , "(100001+100001+100010)" , "101" , "114" , "32" , "105" , "0x6E" , "107" , "32" , "0x63" , "97" , "112" , "32" , "109" , "117" , "115" , "104" , "114" , " (1001110+100001)" , "111" , "109" , "32" , "100" , "105" , "115" , "115" , "111" , "108" , "0x76" , "101" , "32" , "105" , "110" , "116" , "111" , "32" , "97" , "32" , "98" , "108" , "0x61" , "99" , "107" , "32" , "108" , "105" , "113" , "0x75" , "105" , "100" , "(10111*2)" };
            int[] numbers = { 67, 111, 112, 114, 105, 110, 117, 115, 32, 99, 111, 109, 97, 116, 117, 115, 44, 32, 99, 111, 109, 109, 111, 110, 108, 121, 32, 107, 110, 111, 119, 110, 32, 97, 115, 32, 116, 104, 101, 32, 115, 104, 97, 103, 103, 121, 32, 105, 110, 107, 32, 99, 97, 112, 44, 32, 105, 115, 32, 97, 32, 109, 117, 115, 104, 114, 111, 111, 109, 32, 116, 104, 97, 116, 32, 105, 115, 32, 98, 111, 116, 104, 32, 101, 100, 105, 98, 108, 101, 32, 97, 110, 100, 32, 117, 115, 101, 100, 32, 116, 111, 32, 109, 97, 107, 101, 32, 105, 110, 107, 46 };
            //for (int i = 0; i < words.Length; i++)
            //{
            //    numbers[i] = Convert.ToInt32(words[i]);
            //}
            int num = (0b11110 + 0b1111 + 0b1000110);
            Console.WriteLine(num);

            foreach (int number in numbers)
            {
                Console.Write(Convert.ToChar(number));
            }
            foreach (int number2 in numbernew)
            {
                Console.Write(Convert.ToChar(number2));
            }
            Console.WriteLine(Convert.ToChar(Convert.ToInt32((0b11110 + 0b1111 + 0b1000110,2))));
            //for (int i = 0; i< numbernew.Length;i++)
            //{
            //    if (numbernew[i].Contains("0x"))
            //    {
            //        Console.Write(Convert.ToChar(Convert.ToInt32(numbernew[i], 16)));
            //    }
            //    else if (numbernew[i].Contains("(0b"))
            //    {
            //        Console.Write(Convert.ToChar(Convert.ToInt32(numbernew[i], 2)));
            //    }
            //    else
            //        Console.Write(Convert.ToChar(Convert.ToInt32(numbernew[i], 10)));
            //}

        }
    }
}
